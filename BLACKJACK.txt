import simplegui
import random

CARD_SIZE=(73,98)
CARD_CENTER=(36.5,49)
card_images=simplegui.load_image("f:/cards.png")

CARD_BACK_SIZE=(71,96)
CARD_BACK_CENTER=(35.5,48)
card_back=simplegui.load_image("f:/card_back.png")

in_play=False
outcome=""
ab=False
score=0
tr=0
vp=0
vd=0
deck=[]
q=0
msg=""
cdpos=cppos=0
SUITS=['C','S','H','D']
RANKS=['A','2','3','4','5','6','7','8','9','J','Q','K']
VALUES={'A':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'J':10,'Q':10,'K':10}



class Card:
    def __init__(self,suit,rank):
        if (suit in SUITS) and (rank in RANKS):
            self.suit=suit
            self.rank=rank
        else:
            self.suit=none
            self.rank=none
            
    def __str__(self):
        return self.suit+self.rank
    
    def get_suit(self):
        return self.suit
    
    def get_rank(self):
        return self.rank
    
    def draw(self,canvas,pos):
        card_loc=(CARD_CENTER[0]+CARD_SIZE[0] * RANKS.index(self.rank),CARD_CENTER[1]+CARD_SIZE[1] * SUITS.index(self.suit))
        if pos[0]==20 and pos[1]==200:
            canvas.draw_image(card_back,CARD_BACK_CENTER,CARD_BACK_SIZE,[pos[0]+CARD_BACK_CENTER[0],pos[1]+CARD_BACK_CENTER[1]],CARD_BACK_SIZE)
        else:
            canvas.draw_image(card_images,card_loc,CARD_SIZE,[pos[0]+CARD_CENTER[0],pos[1]+CARD_CENTER[1]],CARD_SIZE)
            

class Hand:
    def __init__(self):
        self.h=""
        self.hand=[]
        
    def __str__(self):
        return "Hand contains "+str(self.h)
    
    def add_card(self,card):
        self.h+=str(card)
        self.hand.append(card)
    
    def get_value(self):
        v=0
        
        if len(self.h)>0:
            for l in range(1,len(self.h),2):
                v+=VALUES[self.h[l]]
            for l in range(l,len(self.h),2):
                if self.h[l]=='A' and v<=11:
                    v+=10
            return v
        
    def draw(self,canvas,pos):
        global player
        for l in range(0,len(self.hand)):
            self.hand[l].draw(canvas,pos)
            pos[0]+=75
            
        if in_play==False and flip==1:
            dealer.hand[0].draw(canvas,(19,200))
            
class Deck:
    def __init__(self):
        global deck
        deck=[]
        for S in SUITS:
            for R in RANKS:
                c= Card(S,R)
                deck.append(c)
                
    def shuffle(self):
        random.shuffle(deck)
      
    def deal_card(self):
        global q
        new=deck[q]
        q+=1
        deck.remove(new)
        return new
    
    def __str__(self):
        st="Deck contains"
        for i in range(52):
            st=st+str(deck[i])+" "
        return st
    
def deal():
    global outcome,in_play,deck,q,player,dealer,vp,vd,D,msg,cdpos,cppos,flip,score,ab,tr
    if in_play:
        msg="Abandon! you lost !"
        score-=1
        ab=True
        in_play=False
        
    if in_play==False:
        cdpos=cppos=10
        if ab:
            msg="Abandon.you lose! click Hit/Stand(new)"
            ab=False
        else:
            msg="Click Hit or Stand"
        in_play=True
        q=0
        vp=0
        vd=0
        D=Deck()
        D.shuffle()
        flip=0
        player=Hand()
        dealer=Hand()
        
        player.add_card(Deck.deal_card(D))
        dealer.add_card(Deck.deal_card(D))
        player.add_card(Deck.deal_card(D))
        dealer.add_card(Deck.deal_card(D))
        vp=player.get_value()
        vd=dealer.get_value()
        tr+=1
        
def hit():
    global vp,vd,in_play,score,msg,flip,deck
    if in_play:
        player.add_card(Deck.deal_card(D))
        flip=1
        vp=player.get_value()
        if vp>21:
            score-=1
            msg="your game busted.NEW DEAL ?"
            in_play=False
        elif vp>vd:
            in_play=False
            score+=1
            msg="you win ! NEW DEAL ?"
            
        if vp==vd:
            in_play=False
            score+=1
            msg="you lose ! NEW DEAL"
            
def stand():
    global vp,vd,in_play,score,msg,flip
    if in_play:
        dealer.add_card(Deck.deal_card(D))
        flip=1
        vd=dealer.get_value()
        if vd<17:
            in_play=False
            score+=1
            msg="Dealer's game busted.you win ! click DEAL"
        
        if vp==vd:
            in_play=False
            score-=1
            msg="you lose !NEW DEAL"
            
def draw(canvas):
    global score,msg,player,dealer,ab
    canvas.draw_text("Game:"+str(tr),[500,60],25,"yellow")
    canvas.draw_text("BlackJack",[210,70],48,"aqua")
    canvas.draw_text("score"+str(score),[250,100],32,"white")
    canvas.draw_text("Dealer",[20,170],36,"white")
    canvas.draw_text("player",[20,380],36,"white")
    canvas.draw_text(msg,[160,380],24,"red")
    player.draw(canvas,[20,400])
    dealer.draw(canvas,[20,200])
    
    
frame=simplegui.create_frame("Black-Jack",600,600)
frame.set_canvas_background("green")
frame.add_button("Deal",deal,200)
frame.add_button("Hit",hit,200)
frame.add_button("Stand",stand,200)
frame.set_draw_handler(draw)
 
deal()
frame.start()